// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Carousel {
  id    String  @id @default(cuid()) @map("id")
  image String  @map("image")
  order Int     @map("order")
  text  String? @map("text")
  color String? @map("color")
  href  String? @map("href")

  start_date DateTime? @map("start_date")
  end_date   DateTime? @map("end_date")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  @@map("carousels")
}

model Emoji {
  id    String  @id @default(cuid()) @map("id")
  image String  @map("image")
  type  String? @map("type")
  size  Int?    @map("size")
  text  String? @map("text")
  color String? @map("color")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  @@map("emojis")
}

model Feedback {
  id          String @id @default(cuid()) @map("id")
  title       String @map("title")
  description String @map("description")

  files File[]

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  @@map("feedbacks")
}

model File {
  id    String  @id @default(cuid()) @map("id")
  url   String  @map("url")
  type  String? @map("type")
  size  Int?    @map("size")
  title String? @map("title")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  feedback_id String   @map("feedback_id")
  feedback    Feedback @relation(fields: [feedback_id], references: [id])

  @@map("files")
}

model Social {
  id    String @id @default(cuid()) @map("id")
  title String @map("title")

  subtitles    SubTitle[]
  tips         Tip[]
  descriptions Description[]

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  @@map("socials")
}

model SubTitle {
  id    String  @id @default(cuid()) @map("id")
  title String  @map("title")
  color String? @map("color")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  social_id String
  social    Social? @relation(fields: [social_id], references: [id])

  @@map("subtitles")
}

model Description {
  id    String  @id @default(cuid()) @map("id")
  name  String? @map("name")
  links Link[]

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  social_id String  @map("social_id")
  social    Social? @relation(fields: [social_id], references: [id])

  @@map("descriptions")
}

model Tip {
  id    String   @id @default(cuid()) @map("id")
  type  LinkType @default(link) @map("title")
  text  String?  @map("text")
  href  String?  @map("href")
  color String?  @map("color")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  social_id String  @map("social_id")
  social    Social? @relation(fields: [social_id], references: [id])

  @@map("tips")
}

model Link {
  id    String   @id @default(cuid()) @map("id")
  type  LinkType @default(link) @map("title")
  text  String?  @map("text")
  href  String?  @map("href")
  color String?  @map("color")

  create_by   String   @map("create_by")
  create_date DateTime @default(now()) @map("create_date")
  update_by   String   @map("update_by")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  description_id String       @map("description_id")
  description    Description? @relation(fields: [description_id], references: [id])

  @@map("links")
}

model User {
  id             String    @id @default(cuid()) @map("id")
  name           String?   @map("name")
  email          String?   @unique @map("email")
  email_verified DateTime? @map("email_verified")
  image          String?   @map("image")

  create_date DateTime @default(now()) @map("create_date")
  update_date DateTime @default(now()) @map("update_date")
  is_del      IsDel    @default(NO) @map("is_del")

  @@map("users")
}

enum IsDel {
  YES
  NO
}

enum LinkType {
  link
  text
}
